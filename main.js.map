{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routes.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/details/details.component.ts","./src/app/components/details/details.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/page-not-found/page-not-found.component.ts","./src/app/components/page-not-found/page-not-found.component.html","./src/app/components/results/results.component.ts","./src/app/components/results/results.component.html","./src/app/components/search/search.component.ts","./src/app/components/search/search.component.html","./src/app/config.ts","./src/app/pipes/category.pipe.ts","./src/app/pipes/keys.pipe.ts","./src/app/pipes/name.pipe.ts","./src/app/pipes/no-sanitize.pipe.ts","./src/app/pipes/searched-highlight.pipe.ts","./src/app/pipes/searched.pipe.ts","./src/app/pipes/sort.pipe.ts","./src/app/services/books-http.service.ts","./src/app/services/characters-http.service.ts","./src/app/services/data.service.ts","./src/app/services/details-http.service.ts","./src/app/services/houses-http.service.ts","./src/app/services/http.service.ts","./src/app/shared.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { SearchComponent } from \"./components/search/search.component\";\nimport { DetailsComponent } from \"./components/details/details.component\";\nimport { ResultsComponent } from \"./components/results/results.component\";\nimport { PageNotFoundComponent } from \"./components/page-not-found/page-not-found.component\";\n//  routes\nconst appRoutes: Routes = [\n  { path: \"\", component: SearchComponent, pathMatch: \"full\" },\n  { path: \"results\", component: ResultsComponent },\n  { path: \"details/:type/:id\", component: DetailsComponent },\n  { path: \"not-found\", component: PageNotFoundComponent },\n  { path: \"**\", redirectTo: \"not-found\" }\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(appRoutes, {\n      useHash: true\n    })\n  ],\n  exports: [RouterModule],\n  declarations: []\n})\nexport class AppRoutesModule {}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent implements OnInit {\n  constructor() {}\n  ngOnInit() {}\n}\n","<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from \"./app.component\";\nimport { SearchComponent } from \"./components/search/search.component\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { SearchedPipe } from \"./pipes/searched.pipe\";\nimport { SearchedHighlightPipe } from \"./pipes/searched-highlight.pipe\";\nimport { NoSanitizePipe } from \"./pipes/no-sanitize.pipe\";\nimport { AppRoutesModule } from \"./app-routes.module\";\nimport { DetailsComponent } from \"./components/details/details.component\";\nimport { ResultsComponent } from \"./components/results/results.component\";\nimport { PageNotFoundComponent } from \"./components/page-not-found/page-not-found.component\";\nimport { CategoryPipe } from \"./pipes/category.pipe\";\nimport { NavbarComponent } from \"./components/navbar/navbar.component\";\nimport { KeysPipe } from \"./pipes/keys.pipe\";\nimport { SortPipe } from \"./pipes/sort.pipe\";\nimport { NamePipe } from \"./pipes/name.pipe\";\nimport { ScullyLibModule } from '@scullyio/ng-lib';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchComponent,\n    SearchedPipe,\n    SearchedHighlightPipe,\n    NoSanitizePipe,\n    DetailsComponent,\n    ResultsComponent,\n    PageNotFoundComponent,\n    CategoryPipe,\n    NavbarComponent,\n    KeysPipe,\n    SortPipe,\n    NamePipe,\n  ],\n  imports: [BrowserModule, HttpClientModule, FormsModule, AppRoutesModule, ScullyLibModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Location } from \"@angular/common\";\nimport { DetailsHttpService } from \"../../services/details-http.service\";\n\nimport { isObservable, forkJoin } from 'rxjs';\n\n@Component({\n  selector: \"app-details\",\n  templateUrl: \"./details.component.html\",\n  styleUrls: [\"./details.component.css\"]\n})\nexport class DetailsComponent implements OnInit {\n  request: { type: string; id: number };\n  details: {};\n  loaderVisible: boolean = true;\n\n  constructor(\n    private _location: Location,\n    private _activatedRoute: ActivatedRoute,\n    private _detailsHttp: DetailsHttpService,\n    private _route: Router\n  ) { }\n\n  ngOnInit() {\n    // get all parameters\n    this.request = {\n      type: this._activatedRoute.snapshot.params[\"type\"],\n      id: +this._activatedRoute.snapshot.params[\"id\"]\n    };\n    // send parameters to service to get full details\n    this._detailsHttp.getDetail(this.request).subscribe(\n      (response) => {\n        // this.details = response;\n\n        this.details = Object.keys(response).reduce((p, c) => {\n\n          if (c === 'url' || !response[c] || (Array.isArray(response[c]) && (response[c].length == 0 || (response[c].length && !response[c][0])))) { return p; }\n\n          if (Array.isArray(response[c]) && response[c][0].includes('https')) {\n            return Object.assign(p,\n              {\n                [c]: forkJoin(response[c].map(t => this._detailsHttp.getDetail2(t)))\n              })\n          }\n\n          if (`${response[c]}`.includes('https')) {\n            return Object.assign(p,\n              {\n                [c]: forkJoin([this._detailsHttp.getDetail2(response[c])])\n              })\n          }\n\n          return Object.assign(p, { [c]: response[c] })\n\n        }, {});\n      },\n      error => {\n        console.log(error);\n        // if error navigate to not found page\n        this._route.navigate([\"/not-found\"]);\n        this.details = {};\n      },\n      () => {\n        //   after data is fetched hide the spinner(loading animation)\n        this.loaderVisible = false;\n      }\n    );\n  }\n\n  checkIfObservable(detail) {\n    return isObservable(detail)\n  }\n  getResult = obs => {\n    return obs && obs.length ? obs.map(o => o.name).filter(a => a) : ''\n  }\n  getDate = date => new Date(date);\n\n  isDate = date => isNaN(date) && !isNaN(Date.parse(date));\n\n  goBack(): void {\n    this._location.back();\n  }\n}\n","<div class=\"details__container\">\n  <div class=\"details\">\n    <div class=\"nav\">\n      <button class=\"btn\" (click)=\"goBack()\">\n        <i class=\"icon-back\"></i>Back</button>\n      <button class=\"btn\" [routerLink]=\"['/']\">\n        <i class=\"icon-search\"></i>Search</button>\n    </div>\n    <!-- spinner loading animation -->\n    <div class=\"loader\" *ngIf=\"loaderVisible\">\n      <i class=\"icon-spin6\"></i>\n    </div>\n    <!-- cleandetails pipe to remove empty data -->\n    <!-- keys pipe since details is object  -->\n    <!-- converting it into  keys array  and using it accordingly-->\n    <div class=\"detail\" *ngFor=\"let detail of details|keys\">\n      <!-- show main name -->\n      <div class=\"name\" *ngIf=\"detail=='name'\">{{details[detail]|name}}</div>\n      <!-- show other details -->\n      <div class=\"other\" *ngIf=\"detail!='name' \">\n        <div class=\"key\">{{detail|uppercase}}</div>\n        <ng-container *ngIf=\"checkIfObservable(details[detail])\">\n          <div class=\"value\" *ngIf=\"details[detail] | async; let results\">\n            <ng-container *ngFor=\"let result of getResult(results)\">\n              <span>{{result}}</span>\n            </ng-container>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"!checkIfObservable(details[detail])\">\n          <div class=\"value\">\n            {{isDate(details[detail])?getDate(details[detail]).toDateString():details[detail]}}\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  Input,\n  EventEmitter,\n  Output\n} from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"./navbar.component.html\",\n  styleUrls: [\"./navbar.component.css\"]\n})\nexport class NavbarComponent implements OnInit {\n  @Input() searchedText: string;\n  public toggleSubNav: boolean = false;\n  public categories: string[] = [\"All\", \"House\", \"Character\", \"Book\"];\n  public categorySelected: string = \"All\";\n  @Output() categorySelecting = new EventEmitter<string>();\n  @Output() enteringText = new EventEmitter<string>();\n  @ViewChild(\"searchForm\") searchForm: NgForm;\n  constructor() {}\n\n  ngOnInit() {}\n  userEnteringText() {\n    // emit the entered text by user\n    this.enteringText.emit(this.searchedText);\n  }\n\n  userSelectingCategory() {\n    // emit the selected category by user\n    this.categorySelecting.emit(this.categorySelected);\n  }\n  onSubmit() {}\n}\n","<div class=\"nav\">\n    <form class=\"search__form\" (onSubmit)=\"onSubmit()\" #searchForm=\"ngForm\">\n        <div class=\"search__anything\">\n            <!-- user enters query -->\n            <input type=\"text\" name=\"search\" placeholder=\"Search\" [(ngModel)]=\"searchedText\" (keyup)=\"userEnteringText()\" (change)=\"userEnteringText()\"\n                required>\n            <button class=\"submit\">\n                <i class=\"icon-search\"></i>\n            </button>\n        </div>\n        <!-- button to show filter section -->\n        <button class=\"filter\" (click)=\"toggleSubNav=!toggleSubNav\">\n            <i class=\"icon-filter\"></i>Filter </button>\n    </form>\n</div>\n<div class=\"sub__nav\" [ngClass]=\"{'show__sub--nav' : toggleSubNav}\">\n    <form #categoryForm=\"ngForm\">\n        <!-- radio buttons to select category -->\n        <div *ngFor=\"let category of categories\" class=\"category__radio\">\n            <label [for]=\"category\" [ngClass]=\"{'category__selected':categorySelected==category,'category__not--selected':categorySelected!=category}\">\n                <input type=\"radio\" [value]=\"category\" [(ngModel)]=\"categorySelected\" [id]=\"category\" name=\"category\" (change)=\"userSelectingCategory()\"> {{category}}\n            </label>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"not--found__container\">\n    <div class=\"not--found\">\n        <div class=\"nav\">\n            <button class=\"btn\" [routerLink]=\"['/']\">\n                <i class=\"icon-search\"></i>Search</button>\n        </div>\n        <div class=\"four--not__four\">404\n            <div class=\"message\">Page Not Found</div>\n        </div>\n\n        <div class=\"logo\">\n            <img src=\"./assets/404.png\" alt=\"404 page not found\">\n        </div>\n    </div>\n</div>","import { Component, OnInit } from \"@angular/core\";\nimport { DataService } from \"../../services/data.service\";\nimport { ActivatedRoute, Params } from \"@angular/router\";\n\n@Component({\n  selector: \"app-results\",\n  templateUrl: \"./results.component.html\",\n  styleUrls: [\"./results.component.css\"]\n})\nexport class ResultsComponent implements OnInit {\n  public dataFetched: {}[];\n  public searchedText: string = \"\";\n  public categorySelected: string = \"All\";\n\n  constructor(\n    private _dataService: DataService,\n    private activateRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    // get all data from  data service\n    this.dataFetched = this._dataService.dataStore;\n    // get query parameter q and\n    // pass this to navbar component using property binding\n    this.searchedText = this.activateRoute.snapshot.queryParams[\"q\"];\n    // get query parameter q if changed afterwards\n    this.activateRoute.queryParams.subscribe((params: Params) => {\n      this.searchedText = params[\"q\"];\n    });\n\n    // if nothing is searched return all data\n    if (this.searchedText == undefined) this.searchedText = \"\";\n  }\n\n  getBorderColor(type: string): string {\n    return `var(--${type})`;\n  }\n\n  getBoxShadow(type: string): string {\n    return `0 2px 2px 0 var(--${type}), 0 0 0 1px var(--${type})`;\n  }\n\n  userEnteringText(searchedText: string): void {\n    // get searched text from navbar component using component event binding\n    this.searchedText = searchedText;\n  }\n\n  userSelectingCategory(categorySelected: string): void {\n    // get selected category from navbar component using component event binding\n    this.categorySelected = categorySelected;\n  }\n}\n","<!-- property binding searchedText  to send query params from url to navbar -->\n<!-- event binding user entered text and selected category from navbar to results component -->\n<app-navbar [searchedText]=\"searchedText\" (enteringText)=\"userEnteringText($event)\" (categorySelecting)=\"userSelectingCategory($event)\"></app-navbar>\n\n<div class=\"results-container\">\n    <!-- show data in card format and filtering accordingly using pipes -->\n    <!-- category pipe to get only selected category data -->\n    <!-- searched pipe to get results respective to user input -->\n    <!-- sort pipe to show data in alphabetical order -->\n    <div class=\"card\" *ngFor=\"let card of dataFetched|category:categorySelected|searched:searchedText:'results'|sort\" [ngStyle]=\"{boxShadow: getBoxShadow(card.type)}\">\n        <div class=\"card-header\" [ngStyle]=\"{borderTopColor : getBorderColor(card.type)}\">\n            {{card.type|uppercase}}\n        </div>\n        <div class=\"card-body\">\n            {{card.name|titlecase}}\n        </div>\n        <div class=\"card-footer\">\n            <button class=\"more__details\" [routerLink]=\"['/details',card.type,card.id]\">More Details</button>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild, ViewEncapsulation } from \"@angular/core\";\n\nimport { NgForm } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { DataService } from \"../../services/data.service\";\n\n@Component({\n  selector: \"app-search\",\n  templateUrl: \"./search.component.html\",\n  styleUrls: [\"./search.component.css\"],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SearchComponent implements OnInit {\n  private incrementer: number;\n  private placeholderArray: string[];\n  public placeholderText: string;\n  public searchedText: string = \"\";\n  @ViewChild(\"searchForm\") searchForm: NgForm;\n  public dataFetched;\n  constructor(private _dataService: DataService, private router: Router) {}\n\n  ngOnInit() {\n    // change placeholder text\n    this.incrementer = 1;\n    this.placeholderArray = [\n      \"Type-in a Character\",\n      \"Type-in a House\",\n      \"Type-in a Book\"\n    ];\n    this.placeholderText = this.placeholderArray[0];\n    // after every 2.5 seconds\n    setInterval(() => {\n      this.placeholderText = this.placeholderArray[this.incrementer];\n      ++this.incrementer;\n      if (this.incrementer === 3) this.incrementer = 0;\n    }, 2500);\n    // get data from datastore for showing suggestions\n    // when user enters some text\n    this.dataFetched = this._dataService.dataStore;\n  }\n\n  public onSubmit(): void {\n    // navigate to results page only if user entered more than 1 character\n    if (this.searchedText.length < 2) return;\n\n    // navigate and pass  query parameter\n    this.router.navigate([\"/results\"], {\n      queryParams: { q: this.searchedText }\n    });\n  }\n}\n","<!-- main search page -->\n<div class=\"search__container\">\n    <div>\n        <form (ngSubmit)=\"onSubmit()\" #searchForm=\"ngForm\" id=\"search__form\">\n            <!-- user enters query -->\n            <input type=\"text\" class=\"search\" [placeholder]=\"placeholderText\" [(ngModel)]=\"searchedText\" name=\"search\" #search=\"ngModel\"\n                required>\n            <!-- when pressed enter key or clicked  this will open  results component -->\n            <button type=\"submit\" [disabled]=\"searchedText.length<2\">\n                <i class=\"icon-right\"></i>\n            </button>\n            <p *ngIf=\"search.dirty && search.value==''\" class=\"message\">Please type two more characters.</p>\n            <p *ngIf=\"search.dirty && search.value &&  search.value.length==1 \" class=\"message\">Please type one more character.</p>\n        </form>\n\n    </div>\n    <!-- suggestions for user -->\n    <!-- clicking one of them  will open details component -->\n    <div class=\"suggestions\">\n        <!-- searched pipe to filter user query  -->\n        <!-- slice pipe to show top 10 suggestions to user -->\n        <span class=\"searched__suggestion\" *ngFor=\"let suggestion of dataFetched|searched:searchedText:'search'|slice:0:10;\" [innerHtml]=\"suggestion.name|lowercase|searchedHighlight:searchedText|noSanitize\"\n            [routerLink]=\"['/details',suggestion.type,suggestion.id]\">\n        </span>\n    </div>\n</div>","export const proxy: string = \"\";\n//https://cors-anywhere.herokuapp.com/\n\nexport const domain: string = \"https://anapioficeandfire.com\";\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"category\"\n})\nexport class CategoryPipe implements PipeTransform {\n  transform(value: any, type: string): any {\n    if (type === \"House\") return value.filter(v => v.type === \"house\");\n    if (type === \"Character\") return value.filter(v => v.type === \"character\");\n    if (type === \"Book\") return value.filter(v => v.type === \"book\");\n\n    return value;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({ name: \"keys\" })\nexport class KeysPipe implements PipeTransform {\n  transform(value): any {\n    if (!value) {\n      return null;\n    }\n    // get keys\n    return Object.keys(value);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"name\"\n})\nexport class NamePipe implements PipeTransform {\n  transform(value: any): any {\n    // if empty return N/a\n    if (!value) return \"N / A\";\n\n    // if house string is found replace with none\n    if (new RegExp(\"house \", \"gi\").test(value))\n      return value.replace(new RegExp(\"house \", \"gi\"), \"\");\n\n    return value;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer, SafeHtml } from \"@angular/platform-browser\";\n\n@Pipe({\n  name: \"noSanitize\"\n})\nexport class NoSanitizePipe implements PipeTransform {\n  constructor(private domSanitizer: DomSanitizer) {}\n  transform(html: string): SafeHtml {\n    //   to insert html from typescript\n    return this.domSanitizer.bypassSecurityTrustHtml(html);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"searchedHighlight\"\n})\nexport class SearchedHighlightPipe implements PipeTransform {\n  transform(value: any, enteredText: string): any {\n    //   hightlight searched text from user by replacing it with span with a css class\n    return value.replace(\n      new RegExp(enteredText, \"gi\"),\n      `<span class=\"searched__highlight\">${enteredText}</span>`\n    );\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"searched\",\n  pure: false\n})\nexport class SearchedPipe implements PipeTransform {\n  transform(value: any, enteredText: string, source: string): any {\n    //   if pipe is used in results component and user has not entered anything return all data\n    if (enteredText === \"\" && source === \"results\") return value;\n\n    // else  from different component if entered nothing return nothing\n    if (!enteredText) return;\n\n    // if length is less than 2 return none\n    if (enteredText.length < 2) return null;\n\n    // filter searched\n    return value.filter(fetched =>\n      fetched.name.match(new RegExp(enteredText, \"gi\"))\n    );\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"sort\"\n})\nexport class SortPipe implements PipeTransform {\n  transform(value: any): any {\n    if (!value) return;\n    // sort in ascending order\n    return value.sort((a, b) => a.name.localeCompare(b.name));\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { proxy, domain } from \"../config\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class BooksHttpService {\n  constructor(private _http: HttpClient) {}\n\n  getAllBookInfo() {\n    return this._http.get(`${proxy}${domain}/api/books?page=1&pageSize=50`);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { proxy, domain } from \"../config\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CharactersHttpService {\n  constructor(private _http: HttpClient) {}\n\n  getAllCharactersInfo() {\n    return this._http.get(\n      `${proxy}${domain}/api/characters?page=1&pageSize=50`\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpService } from \"./http.service\";\nimport { DetailsHttpService } from \"./details-http.service\";\n\ninterface storeType {\n  properties?: any;\n}\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DataService {\n  private _dataStore: storeType[] = [];\n\n  constructor(private httpService: HttpService) {\n    // store data\n    this._dataStore = this.httpService.getAllDataFromApi();\n  }\n\n  get dataStore(): storeType[] {\n    return this._dataStore;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { proxy, domain } from \"../config\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DetailsHttpService {\n  constructor(private _httpClient: HttpClient) { }\n\n  getDetail(request: { type: string; id: number }) {\n    // get details\n    return this._httpClient.get(\n      `${proxy}${domain}/api/${request.type}s/${request.id}`\n    );\n  }\n  getDetail2(url) {\n    // get details\n    return this._httpClient.get(\n      url\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { proxy, domain } from \"../config\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class HousesHttpService {\n  constructor(private _http: HttpClient) {}\n\n  getAllHouseData() {\n    return this._http.get(`${proxy}${domain}/api/houses?page=1&pageSize=50`);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { BooksHttpService } from \"./books-http.service\";\nimport { HousesHttpService } from \"./houses-http.service\";\nimport { CharactersHttpService } from \"./characters-http.service\";\nimport { getId } from \"../shared\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class HttpService {\n  data: { properties?: any }[] = [];\n  constructor(\n    private booksHttp: BooksHttpService,\n    private housesHttp: HousesHttpService,\n    private charactersHttp: CharactersHttpService\n  ) {}\n\n  public getAllDataFromApi(): { properties?: any }[] {\n    // get  data from services and process them\n    // to assign type and id\n    this.booksHttp.getAllBookInfo().subscribe(\n      (response: {}[]) => {\n        // loop through response\n        response.forEach(d => {\n          // assign n/a if its empty\n          if (d[\"name\"] === \"\") d[\"name\"] = \"N / A\";\n          // assign type\n          d[\"type\"] = \"book\";\n          //   get id from url and assign\n          d[\"id\"] = getId(d[\"url\"]);\n        });\n        this.data.push(...response);\n      },\n      error => {\n        console.log(error);\n      }\n    );\n    this.housesHttp.getAllHouseData().subscribe(\n      (response: {}[]) => {\n        response.forEach(d => {\n          if (d[\"name\"] === \"\") d[\"name\"] = \"N / A\";\n          d[\"type\"] = \"house\";\n          d[\"id\"] = getId(d[\"url\"]);\n        });\n        response = response.map(d => {\n          d[\"name\"] = d[\"name\"].replace(new RegExp(\"House \", \"gi\"), \"\");\n          return d;\n        });\n        this.data.push(...response);\n      },\n      error => {\n        console.log(error);\n      }\n    );\n    this.charactersHttp.getAllCharactersInfo().subscribe(\n      (response: {}[]) => {\n        response.forEach(d => {\n          if (d[\"name\"] === \"\") d[\"name\"] = \"N / A\";\n          d[\"type\"] = \"character\";\n          d[\"id\"] = getId(d[\"url\"]);\n        });\n        this.data.push(...response);\n      },\n      error => {\n        console.log(error);\n      }\n    );\n    return this.data;\n  }\n}\n","export const getId = url => url.split(\"/\")[url.split(\"/\").length - 1];\nexport const getType = url => url.split(\"/\")[url.split(\"/\").length - 2];\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}